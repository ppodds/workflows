name: Build image and push

on:
  workflow_call:
    inputs:
      image_name:
        type: string
        required: true
        description: "The name of the image to build and push"
      dockerfile:
        type: string
        required: false
        description: "The path to the Dockerfile to build"
        default: Dockerfile
      registry:
        type: string
        required: true
        description: "The image registry url"
      image_tag:
        type: string
        required: true
        description: "The image tag"
      project_name:
        type: string
        required: true
        description: "The project name in image registry"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    name: "Build Docker image and push"
    steps:
      - name: Show inputs
        run: |
          echo "::group::inputs"
          echo 'image_name: ${{ inputs.image_name }}'
          echo 'dockerfile: ${{ inputs.dockerfile }}'
          echo 'registry: ${{ inputs.registry }}'
          echo 'image_tag: ${{ inputs.image_tag }}'
          echo 'project_name: ${{ inputs.project_name }}'    
          echo '::endgroup::'
      - name: Set variables
        run: echo "REGISTRY_BASENAME=$(basename ${{ inputs.registry }})" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to image registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.REGISTRY_BASENAME }}/${{ inputs.project_name }}/${{ inputs.image_name }}:latest, ${{ env.REGISTRY_BASENAME }}/${{ inputs.project_name }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
          file: ${{ inputs.dockerfile }}
